































Mathematics | Combinatorics Basics - GeeksforGeeks






























































Skip to content









TutorialsPython TutorialTaking Input in PythonPython OperatorsPython Data TypesPython NumbersPython StringPython ListsPython TuplesSets in PythonPython DictionaryPython Loops and Control FlowPython Conditional StatementsPython LoopsPython FunctionsPython OOPS ConceptPython Data StructuresPython DSALinked ListStackQueueTreeHeapHashingGraphSetsMapAdvance Data StructureSorting AlgorithmsSearching AlgorithmsPython Exception HandlingPython File HandlingPython ExercisesPython List ExercisePython String ExercisePython Tuple ExercisePython Dictionary ExercisePython Set ExercisePython Design PatternsPython Programming ExamplesPython Practice QuestionsJavaJava Programming LanguageJava TutorialData TypesVariablesOperatorsFlow Control in JavaLoops in JavaMethodsStringsArraysOOPs ConceptsOOPs ConceptsClasses and ObjectsAccess ModifiersInheritanceAbstractionEncapsulationPolymorphismInterfacePackagesMultithreadingFile HandlingRegular ExpressionJava CollectionsJava CollectionsCollection ClassList InterfaceArrayListLinkedList ClassQueue InterfaceSet InterfaceHashSet ClassMap InterfaceHashMap ClassHashTable ClassIteratorComparatorCollection Interview QuestionsJava 8 TutorialJava ProgramsJava Programming ExamplesJava Array ProgramsJava String ProgramsJava Date-Time ProgramsJava File Handling ProgramsJava Collection ProgramsJava JDBC ProgramsJava Apache POI ProgramsJava OpenCV ProgramsJava Interview QuestionsJava Interview QuestionsCore Java Interview Questions-FreshersJava Multithreading Interview QuestionsOOPs Interview Questions and AnswersJava ExercisesJava QuizJava QuizCore Java MCQJava ProjectsAdvance JavaSpring TutorialSpring Boot TutorialSpring Boot Interview QuestionsSpring MVC TutorialSpring MVC Interview QuestionsHibernate TutorialHibernate Interview QuestionsProgramming LanguagesCC++JavaScriptPHPR TutorialC#SQLScalaPerlGo LanguageKotlinSystem DesignSystem Design TutorialWhat is System DesignKey Terminologies in System DesignAnalysis and Architecture of SystemsScalability in System DesignDatabases in System DesignHigh Level Design or HLDLow Level Design or LLDCase Studies in Designing SystemsComplete System Design TutorialSoftware Design PatternsSystem Design RoadmapTop 10 System Design Interview Questions and AnswersInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetitive ProgrammingMultiple Choice QuizzesAptitude for PlacementsComputer Science SubjectsOperating SystemDBMSComputer NetworksEngineering MathematicsComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringDevOpsGITAWSDockerKubernetesMicrosoft Azure TutorialGoogle Cloud PlatformLinuxLinux TutorialLinux Commands A-ZLinux Commands CheatsheetFile Permission CommandsLinux System AdministrationLinux File SystemLinux Shell ScriptingLinux NetworkingLinux Interview QuestionsSoftware TestingSoftware Testing TutorialSoftware Engineering TutorialTesting Interview QuestionsJiraDatabasesDBMS TutorialSQL TutorialPostgreSQL TutorialMongoDB TutorialSQL Interview QuestionsMySQL Interview QuestionsPL/SQL Interview QuestionsAndroidAndroid TutorialAndroid Studio TutorialKotlin For AndroidAndroid ProjectsAndroid Interview Questions6 Weeks of Android App DevelopmentExcelMS Excel TutorialIntroduction to MS ExcelData Analysis in ExcelBasic Excel Formulas & FunctionsData Analysis in Advanced ExcelWorkbooksStatistical FunctionsData Visualization in ExcelPivot Tables in ExcelExcel Spreadsheets in PythonBasic Excel ShortcutsMathematicsNumber SystemAlgebraLinear AlgebraTrigonometrySet TheoryStatisticsProbabilityGeometryMensurationLogarithmsCalculusCommerceBusiness StudiesAccountancyMicroeconomicsStatistics for EconomicsMacroeconomicsHuman Resource Management (HRM)ManagementFinanceCommerce Complete GuideAptitudeAptitude Question and AnswersQuantitative AptitudeLogical ReasoningVerbal AbilityDSAData StructuresArraysMatrixStringsLinked ListSingly Linked ListDoubly Linked ListCircular Linked ListDoubly Circular Linked ListLinked List TutorialStackQueueTreeGeneric TreeBinary TreeBinary Search TreeAVL TreeB TreeB+ TreeRed Black TreeTree Data Structure TutorialHeapHashingGraphSet Data StructureMap Data StructureAdvanced Data StructureData Structures TutorialAlgorithmsAnalysis of AlgorithmsDesign and Analysis of AlgorithmsAsymptotic AnalysisAsymptotic NotationsWorst, Average and Best CasesSearching AlgorithmsLinear SearchBinary SearchSearching Algorithms TutorialSorting AlgorithmsSelection SortBubble SortInsertion SortMerge SortQuick SortHeap SortCounting SortRadix SortBucket SortSorting Algorithms TutorialGreedy AlgorithmsDynamic ProgrammingGraph AlgorithmsPattern SearchingRecursionBacktrackingDivide and ConquerMathematical AlgorithmsGeometric AlgorithmsBitwise AlgorithmsRandomized AlgorithmsBranch and BoundAlgorithms TutorialDSA TutorialPracticeAll DSA ProblemsProblem of the DayCompany Wise Coding PracticeAmazonMicrosoftFlipkartExplore AllGfG SDE SheetPractice Problems Difficulty WiseSchoolBasicEasyMediumHardLanguage Wise Coding PracticeCPPJavaPythonCurated DSA ListsBeginner's DSA SheetTop 50 Array ProblemsTop 50 String ProblemsTop 50 DP ProblemsTop 50 Graph ProblemsTop 50 Tree ProblemsCompetitive ProgrammingCompany Wise SDE SheetsFacebook SDE SheetAmazon SDE SheetApple SDE SheetNetflix SDE SheetGoogle SDE SheetDSA Cheat SheetsSDE SheetDSA Sheet for BeginnersFAANG Coding SheetProduct-Based Coding SheetCompany-Wise Preparation SheetTop Interview QuestionsTop 100 DSA Interview Questions Topic-wisePuzzlesAll PuzzlesTop 100 Puzzles Asked In InterviewsTop 20 Puzzles Commonly Asked During SDE InterviewsData SciencePython TutorialR TutorialMachine LearningData Science using PythonData Science using RData Science PackagesPandas TutorialNumPy TutorialData VisualizationPython Data Visualization TutorialData Visualization with RData AnalysisData Analysis with PythonData Analysis with RDeep LearningNLP TutorialWeb TechHTML TutorialCSS TutorialJavaScript TutorialPHP TutorialReactJS TutorialNodeJS TutorialAngularJS TutorialBootstrap TutorialTypescriptWeb Development Using PythonDjangoDjango TutorialDjango ProjectsDjango Interview QuestionsFlaskFlask TutorialFlask ProjectsFlask Interview QuestionsPostmanGithubWordpress TutorialWeb DesignCheat SheetsHTML Cheat SheetCSS Cheat SheetJavaScript Cheat SheetReact Cheat SheetAngular Cheat SheetjQuery Cheat SheetBootstrap Cheat SheetJavaScript ProjectsLearn Complete Web DevelopmentCoursesCoding for EveryoneDSA to DevelopmentMachine Learning & Data ScienceGenerative AI & ChatGPTBecome AWS CertifiedDSA CoursesData Structure & Algorithm(C++/JAVA)Data Structure & Algorithm(Python)Data Structure & Algorithm(JavaScript)Programming LanguagesCPPJavaPythonJavaScriptC





 















































Number SystemAlgebraSet TheoryGeometryLinear AlgebraTrigonometryLogarithmsStatisticsProbabilityCalculusDiscrete MathematicsEngineering Math Practice Problems 




▲












Open In App











Discrete Mathematics | Representing RelationsRepresentation of Relation in Graphs and MatricesClosure of RelationsNumber of possible Equivalence Relations on a finite setMathematics | Classes (Injective, surjective, Bijective) of FunctionsMathematics | Total number of possible functionsDiscrete Maths | Generating Functions-Introduction and PrerequisitesMathematics | Generating Functions - Set 2Mathematics | Sequence, Series and SummationsMathematics | Independent Sets, Covering and MatchingMathematics | Introduction to ProofsDiscrete Mathematics | Hasse DiagramsPigeonhole PrincipleMathematics | Combinatorics BasicsMathematics | PnC and Binomial CoefficientsMathematics | Generalized PnC Set 1Mathematics | Generalized PnC Set 2Corollaries of Binomial TheoremNumber of triangles in a plane if no more than two points are collinearSum of Squares of n Natural numbersFinding nth term of any Polynomial SequenceDiscrete Mathematics | Types of Recurrence Relations - Set 2Mathematics | ProbabilityConditional ProbabilityBayes's Theorem for Conditional Probability 















Mathematics | Combinatorics Basics


Last Updated : 
13 Mar, 2023



 

Improve






 

















Improve


 


Like Article



Like








Save








Share







Report







Combinatorics is the branch of Mathematics dealing with the study of finite or countable discrete structures. It includes the enumeration or counting of objects having certain properties. Counting helps us solve several types of problems such as counting the number of available IPv4 or IPv6 addresses. 
Counting Principles: There are two basic counting principles, sum rule, and the product rule. Sum Rule – If a task can be done in one of ways or one of ways, where none of the set of ways is the same as any of the set of ways, then there are ways to do the task. Product Rule – If a task can be broken down into a sequence of subtasks, where each subtask can be performed in respectively, then the total number of ways the task can be performed is .  
Example 1 – In how many ways can 3 winning prizes be given to the top 3 players in a game played by 12 players?  Solution – We have to distribute 3 prizes among 12 players. This task can be divided into 3 subtasks of assigning a single prize to a certain player. Giving out the first prize can be done in 12 different ways. After giving out the first prize, two prizes remain and 11 players remain. Similarly, the second prize and third prize can be given in 11 ways and 10 ways. The total number of ways by the product rule is 12 * 11 * 10 = 1320.  Example 2 – In how many ways can a person choose a project from three lists of projects of sizes 10, 15, and 19 respectively?  Solution – The person has a choice of choosing a project from either of the three lists. So the person can choose from either 10 projects or 15 projects or 19 projects. Since choosing from one list is not the same as choosing another list, the total number of ways of choosing a project by the sum-rule is 10 + 15 + 19 = 44.  Example 3 – How many distinct license plates are possible in the given format- Two alphabets in uppercase, followed by two digits then a hyphen, and finally four digits. Sample- AB12-3456.  Solution – There are 26 possibilities for each of the two letters and 10 possibilities for each of the digits. Therefore the total number of possibilities is – 26 * 26 * 10 * 10 * 10 * 10 * 10 * 10 = 676000000.  Example 4 – How many variable names of length upto 3 exist if the variable names are alphanumeric and case-sensitive with the restriction that the first character has to be an alphabet?  Solution – Let denote the number of possible variable names of lengths 1, 2, and 3. Therefore, the total number of variable names is . For there are only 52 possibilities since the first character has to be an alphabet. For , there are 52 * 62 = 3224 possibilities For , there are 52 * 62 * 62 = 199888 possibilities Therefore, total number of variable names = 52 + 3224 + 199888 = 203164 Principle of Inclusion-Exclusion :
The sum rule mentioned above states that if there are multiple sets of ways of doing a task, there shouldn’t be any way that is common between two sets of ways because if there is, it would be counted twice and the enumeration would be wrong. 
The principle of inclusion-exclusion says that in order to count only unique ways of doing a task, we must add the number of ways to do it in one way and the number of ways to do it in another and then subtract the number of ways to do the task that are common to both sets of ways. The principle of inclusion-exclusion is also known as the subtraction principle. For two sets of ways and , the enumeration would like this- 
|A ? B| = |A| +|B| ?|A ? B|
Example 1 – How many binary strings of length 8 either start with a ‘1’ bit or end with two bits ’00’? 
Solution – If the string starts with one, there are 7 characters left which can be filled in ways. If the string ends with ’00’ then 6 characters can be filled in ways. Now if we add the above sets of ways and conclude that it is the final answer, then it would be wrong. This is because there are strings with start with ‘1’ and end with ’00’ both, and since they satisfy both criteria they are counted twice. So we need to subtract such strings to get a correct count. Strings that start with ‘1’ and end with ’00’ have five characters that can be filled in ways. So by the inclusion-exclusion principle we get- Total strings = 128 + 64 – 32 = 160 
Example 2 – How many numbers between 1 and 1000, including both, are divisible by 3 or 4? 
Solution – Number of numbers divisible by 3 = =. Number of numbers divisible by 4 = = . Number of numbers divisible by 3 and 4 = = . Therefore, number of numbers divisible by 3 or 4 = = 333 + 250 – 83 = 500
In the same way, we can be applied when the number of sets is larger. suppose thereare three sets, the inclusion-exclusion formula will be 
|A ? B ? C| = |A| +|B| +|C| ?|A ? B| ?|A ? C| ?|B ? C| +|A ? B ? C|
 the corresponding diagram will look like this:
the inclusion-exclusion formula for 3 sets 
And if you try to generalize for n-sets, the size of the union X1 ? X2 ? ··· ? Xn can be calculated by going through all possible intersections that contain some of the sets X1, X2,…, Xn. If the intersection contains an odd number of sets, its size is added to the answer, and otherwise, its size is subtracted from the answer.
Similar formulas for calculating the size of an intersection:                                                                                                                                                                                                                                                                                                                                                                                 
 |A ?B | = |A| +|B| ?|A ? B|  
 and,
 |A ? B ? C| = |A| +|B| +|C| ?|A ? B| ?|A ? C| ?|B ? C| +|A ? B ? C|Derangements                                                                                                                                                                                                                  
In order to understand derangements let’s, take an example, count the number of derangements of elements {1,2,…,n}, i.e., permutations where no element remains in its original place. when n = 3, there are two derangements: (2,3,1) and (3,1,2).
One way for solving the problem is to use inclusion-exclusion, Let Xk be the set of permutations that contain the element k at position k.                    for n = 3, the sets are as follows:
                                                         X1 = {(1,2,3),(1,3,2)}                                                         X2 = {(1,2,3),(3,2,1)}                                                         X3 = {(1,2,3),(2,1,3)}                                                                                                                                                      
Using these sets, the number of derangements equals
n!?|X1 ? X2 ?··· ? Xn |,
Using inclusion-exclusion reduces to calculating sizes of intersections which can be done easily, for n=3, the size of |X1 ? X2 ? X3| is         
=>  |X1| +|X2| +|X3| ?|X1 ? X2| ?|X1 ? X3| ?|X2 ? X3| +|X1 ? X2 ? X3|
=>  2+2+2?1?1?1+1
=> 4
So the number of solutions will be 3!?4 = 2. Well, this problem can also be solved without using inclusion-exclusion. Let’s say f(n) denotes the number of derangements for {1,2,…,n}. So, I can write the recursive formula in this manner,
recursive formula
The formula can be derived by considering the possibilities of how element 1 changes in the derangement.                                                                 There are n?1 ways to choose an element x that replaces element 1. In each such choice, there are two ways:                                                                 first way : We also replace the element x with the element 1. After this, the remaining task is to construct a derangement of n?2 elements.                 second way: We replace the element x with some other element than 1. Now we have to construct a derangement of the n?1 element, because we cannot replace the element x with the element 1, and all other elements must be changed.
GATE CS Corner Questions
Practicing the following questions will help you test your knowledge. All questions have been asked in GATE in previous years or in GATE Mock Tests. It is highly recommended that you practice them. 1. GATE CS 2007, Question 3 2. GATE CS 2004, Question 26 Find the next Article @ Pigeonhole Principle 
  
 








 



GeeksforGeeks

 






 







Improve








Previous Article



Pigeonhole Principle




Next Article




Mathematics | PnC and Binomial Coefficients









  Please Login to comment...









Similar Reads



Combinatorics: How many Words with 2 Different Vowels and 2 Different Consonants can be Formed from Alphabet?
Combinatorics is a branch of mathematics that focuses on studying the selection, arrangement, and operation of countable discrete structures. This is essential in computer science because it can be used to solve problems regarding statistics and probability. Moreover, combinatorics also plays a big role in the optimization of various applications.



3 min read




Mathematics | Graph Theory Basics - Set 1
A graph is a data structure that is defined by two components : A node or a vertex.An edge E or ordered pair is a connection between two nodes u,v that is identified by unique pair(u,v). The pair (u,v) is ordered because (u,v) is not same as (v,u) in case of directed graph.The edge may have a weight or is set to one in case of unweighted graph.Cons



4 min read




Mathematics | Graph Theory Basics - Set 2
Prerequisite - Graph Theory Basics – Set 1 A graph is a structure amounting to a set of objects in which some pairs of the objects are in some sense "related". The objects of the graph correspond to vertices and the relations between them correspond to edges. A graph is depicted diagrammatically as a set of dots depicting vertices connected by line



7 min read




Basics of Signed Binary numbers of ranges of different Datatypes
Core concepts of Signed Binary Numbers And Explanation of Ranges of Different Datatypes. If I would ask what is the value of (1000 0000)2 in decimal then certainly two ambiguous answers will come up (-128)10 and (+128)10 . The answer is really ambiguous as both answers are correct. So the concept of signed and unsigned numbers comes up to help over



4 min read




Floating Point Representation - Basics
There are posts on representation of floating point format. The objective of this article is to provide a brief introduction to floating point format. The following description explains terminology and primary details of IEEE 754 binary floating-point representation. The discussion confines to single and double precision formats. Usually, a real nu



7 min read




Mathematics | Probability
Probability refers to the extent of occurrence of events. When an event occurs like throwing a ball, picking a card from a deck, etc., then there must be some probability associated with that event. In terms of mathematics, probability refers to the ratio of wanted outcomes to the total number of possible outcomes. There are three approaches to the



9 min read




Mathematics | Covariance and Correlation
Covariance and Correlation are two mathematical concepts which are commonly used in the field of probability and statistics. Both concepts describe the relationship between two variables. Covariance - It is the relationship between a pair of random variables where change in one variable causes change in another variable. It can take any value betwe



2 min read




Mathematics | Walks, Trails, Paths, Cycles and Circuits in Graph
Prerequisite - Graph Theory Basics – Set 1 1. Walk - A walk is a sequence of vertices and edges of a graph i.e. if we traverse a graph then we get a walk. Edge and Vertices both can be repeated. Here, 1-&gt;2-&gt;3-&gt;4-&gt;2-&gt;1-&gt;3 is a walk. Walk can be open or closed. Open walk- A walk is said to be an open walk if the starting and ending



2 min read




Mathematics | Total number of possible functions
In this article, we are discussing how to find number of functions from one set to another. For understanding the basics of functions, you can refer this: Classes (Injective, surjective, Bijective) of Functions. Number of functions from one set to another: Let X and Y are two sets having m and n elements respectively. In a function from X to Y, eve



4 min read




Mathematics | Probability Distributions Set 2 (Exponential Distribution)
The previous article covered the basics of Probability Distributions and talked about the Uniform Probability Distribution. This article covers the Exponential Probability Distribution which is also a Continuous distribution just like Uniform Distribution. Introduction - Suppose we are posed with the question- How much time do we need to wait befor



5 min read



View More Articles



Article Tags : 


Discrete Mathematics


Pigeonhole Principle


Engineering Mathematics


GATE CS
 






Like




































 




Explore More




























































                     A-143, 9th Floor, Sovereign Corporate Tower, Sector-136, Noida, Uttar Pradesh - 201305                      
























CompanyAbout UsLegalCareersIn MediaContact UsAdvertise with usGFG Corporate SolutionPlacement Training ProgramExploreHack-A-ThonsGfG Weekly ContestDSA in JAVA/C++Master System DesignMaster CPGeeksforGeeks VideosGeeks CommunityLanguagesPythonJavaC++PHPGoLangSQLR LanguageAndroid TutorialTutorials ArchiveDSAData StructuresAlgorithmsDSA for BeginnersBasic DSA ProblemsDSA RoadmapTop 100 DSA Interview ProblemsDSA Roadmap by Sandeep JainAll Cheat SheetsData Science & MLData Science With PythonData Science For BeginnerMachine Learning TutorialML MathsData Visualisation TutorialPandas TutorialNumPy TutorialNLP TutorialDeep Learning TutorialHTML & CSSHTMLCSSWeb TemplatesCSS FrameworksBootstrapTailwind CSSSASSLESSWeb DesignPython TutorialPython Programming ExamplesPython ProjectsPython TkinterWeb ScrapingOpenCV TutorialPython Interview QuestionDjangoComputer ScienceOperating SystemsComputer NetworkDatabase Management SystemSoftware EngineeringDigital Logic DesignEngineering MathsDevOpsGitAWSDockerKubernetesAzureGCPDevOps RoadmapCompetitive ProgrammingTop DS or Algo for CPTop 50 TreeTop 50 GraphTop 50 ArrayTop 50 StringTop 50 DPTop 15 Websites for CPSystem DesignHigh Level DesignLow Level DesignUML DiagramsInterview GuideDesign PatternsOOADSystem Design BootcampInterview QuestionsJavaScriptJavaScript ExamplesTypeScriptReactJSNextJSAngularJSNodeJSLodashWeb BrowserPreparation CornerCompany-Wise Recruitment ProcessResume TemplatesAptitude PreparationPuzzlesCompany-Wise PreparationSchool SubjectsMathematicsPhysicsChemistryBiologySocial ScienceEnglish GrammarWorld GKManagement & FinanceManagementHR ManagementFinanceOrganisational BehaviourMarketingFree Online ToolsTyping TestImage EditorCode FormattersCode ConvertersCurrency ConverterRandom Number GeneratorRandom Password GeneratorMore TutorialsSoftware DevelopmentSoftware TestingProduct ManagementSEO - Search Engine OptimizationLinuxExcelAll CheatsheetsGeeksforGeeks VideosDSAPythonJavaC++Web DevelopmentData ScienceCS Subjects 






@GeeksforGeeks, Sanchhaya Education Private Limited, All rights reserved










        We use cookies to ensure you have the best browsing experience on our website. By using our site, you
        acknowledge that you have read and understood our
        Cookie Policy &
        Privacy Policy


        Got It !
    














Improvement





Please go through our recently updated Improvement Guidelines before submitting any improvements.
This article is being improved by another user right now. You can suggest the changes for now and it will be under the article's discussion tab.
You will be notified via email once the article is available for improvement.
                        Thank you for your valuable feedback!
                    

Suggest changes



Please go through our recently updated Improvement Guidelines before submitting any improvements.


Suggest Changes
Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal.







Create Improvement
Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all.














Suggest Changes







Suggestion[CharLimit:2000]















Create Improvement


































What kind of Experience do you want to share?









Interview Experiences







Admission Experiences







Career Journeys







Work Experiences







Campus Experiences







Competitive Exam Experiences






                        Can't choose a topic to write? click here for suggested topics
                    



                       Write and publish your own Article
                    











